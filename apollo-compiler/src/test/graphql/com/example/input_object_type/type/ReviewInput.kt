// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.input_object_type.type

import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Input
import com.apollographql.apollo.api.InputType
import com.apollographql.apollo.api.internal.ResponseAdapter
import com.example.input_object_type.type.adapter.ReviewInput_ResponseAdapter
import java.util.Date
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

/**
 * The input object sent when someone is creating a new review
 */
@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
data class ReviewInput(
  /**
   * 0-5 stars
   */
  val stars: Int,
  /**
   * for test purpose only
   */
  val nullableIntFieldWithDefaultValue: Input<Int> = Input.optional(10),
  /**
   * Comment about the movie, optional
   */
  val commentary: Input<String> = Input.absent(),
  /**
   * Favorite color, optional
   */
  val favoriteColor: ColorInput,
  /**
   * for test purpose only
   */
  val enumWithDefaultValue: Input<Episode> = Input.optional(Episode.JEDI),
  /**
   * for test purpose only
   */
  val nonNullableEnumWithDefaultValue: Episode = Episode.JEDI,
  /**
   * for test purpose only
   */
  val nullableEnum: Input<Episode> = Input.absent(),
  /**
   * for test purpose only
   */
  val listOfCustomScalar: Input<List<Date?>> = Input.absent(),
  /**
   * for test purpose only
   */
  val customScalar: Input<Date> = Input.absent(),
  /**
   * for test purpose only
   */
  val listOfEnums: Input<List<Episode?>> = Input.optional(listOf(Episode.NEWHOPE, Episode.EMPIRE)),
  /**
   * for test purpose only
   */
  val listOfInt: Input<List<Int?>> = Input.optional(listOf(1, 2, 3)),
  /**
   * for test purpose only
   */
  val listOfString: Input<List<String?>> = Input.optional(listOf("test1", "test2", "test3")),
  /**
   * for test purpose only
   */
  val listOfStringNonOptional: List<String?>,
  /**
   * for test purpose only
   */
  val listOfInputTypes: Input<List<ColorInput?>> = Input.optional(emptyList()),
  /**
   * for test purpose only
   */
  val booleanWithDefaultValue: Input<Boolean> = Input.optional(true),
  /**
   * for test purpose only
   */
  val booleanNonOptional: Input<Boolean> = Input.absent(),
  /**
   * for test purpose only
   */
  val listOfListOfString: Input<List<List<String>>> = Input.absent(),
  /**
   * for test purpose only
   */
  val listOfListOfEnum: Input<List<List<Episode>>> = Input.absent(),
  /**
   * for test purpose only
   */
  val listOfListOfCustom: Input<List<List<Date>>> = Input.absent(),
  /**
   * for test purpose only
   */
  val listOfListOfObject: Input<List<List<ColorInput>>> = Input.absent(),
  /**
   * for test purpose only
   */
  val capitalizedField: Input<String> = Input.absent(),
  /**
   * for test purpose only
   */
  val capitalizedInt: Input<Int> = Input.absent()
) : InputType<ReviewInput> {
  override fun adapter(customScalarAdapters: CustomScalarAdapters): ResponseAdapter<ReviewInput> {
    val adapter = customScalarAdapters.getInputObjectAdapter("ReviewInput") {
      ReviewInput_ResponseAdapter(customScalarAdapters)
    }
    return adapter
  }
}
